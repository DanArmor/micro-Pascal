#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

../include/AST.hpp
vector
-
memory
-
Token.hpp
../include/Token.hpp
Visitor.hpp
../include/Visitor.hpp
ASTclasses.hpp
../include/ASTclasses.hpp

../include/ASTclasses.hpp

../include/Lexer.hpp
string
-
fstream
-
Token.hpp
../include/Token.hpp
List.cpp
../include/List.cpp

../include/List.cpp
cstddef
-
vector
-
stdexcept
-
iterator
-

../include/PascalTokens.hpp
vector
-
Token.hpp
../include/Token.hpp
List.cpp
../include/List.cpp

../include/Syntax.hpp
vector
-
initializer_list
-
magic_enum.hpp
../include/magic_enum.hpp
Token.hpp
../include/Token.hpp
AST.hpp
../include/AST.hpp
List.cpp
../include/List.cpp

../include/Token.hpp
string
-
regex
-

../include/Visitor.hpp
fstream
-
string
-
fmt/format.h
-
Token.hpp
../include/Token.hpp
AST.hpp
../include/AST.hpp
ASTclasses.hpp
../include/ASTclasses.hpp

../side_include/magic_enum.hpp
array
-
cassert
-
cstdint
-
cstddef
-
iosfwd
-
limits
-
type_traits
-
utility
-
variant
-
optional
-
string
-
string_view
-

/home/dan/micro-Pascal/tests/syntax/testSyntax.cpp
string
-
vector
-
gtest/gtest.h
-
List.cpp
/home/dan/micro-Pascal/tests/syntax/List.cpp
Lexer.hpp
/home/dan/micro-Pascal/tests/syntax/Lexer.hpp
Syntax.hpp
/home/dan/micro-Pascal/tests/syntax/Syntax.hpp
AST.hpp
/home/dan/micro-Pascal/tests/syntax/AST.hpp
PascalTokens.hpp
/home/dan/micro-Pascal/tests/syntax/PascalTokens.hpp

